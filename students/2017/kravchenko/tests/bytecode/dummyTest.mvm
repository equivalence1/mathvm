int x1;
int y;
int z;
int i;

function void setMem(int base, int offset, int value, int width) native 'unsafe_setMem';
function int getMem(string base, int offset, int width) native 'unsafe_getMem';

function int foo(int x) {
    int r;
    function int bar(int a) {
        if (a <= 0) {
            return z;
        }
        x = baz();
        r += 1;
        return x + bar(a - 1);
    }
    function int baz() {
        int s;
        function int bak(int z1) {
            if (z1 <= 0) {
                x = z1;
            } else {
                y = z1 + 1;
                x = -z1;
            }
            x -= 1;
            int t;
            t = baz();
            t -= 1;
            if (s < 0) {
                s = s * -1;
            }
            x += 1;
            return t + z1 + bar(z1 - y);
        }
        if (x <= 0 || y <= 0 || z <= 0) {
            return x + y + z;
        }
        s = foo(x - 1);
        y += s;
        z = bak(z - y + 1);
        z -= 2;
        return s + bar(x);
    }
    if (x == 0) {
        int f;
        f = baz();
        return bar(f - 3);
    }
    r = foo(x - 1);
    bar(r);
    return r + baz();
}

x1 = 2;
y = 2;
z = 2;

for (i in 1..(y + x1)) {
    print('\n', '\t', '\\');
}

while (1 < (z + y)) {
    foo(1);
    print(1, 2, '\n\n\n');
}

print(foo(2), '\n');
print(x1, '\n', y, '\n', z, '\n');
